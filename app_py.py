
import streamlit as st
import pandas as pd
import numpy as np
import os
import json
from pathlib import Path

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="C√≥digo Estimador",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Cargar traducciones
def load_translations(lang):
    translations = {
        "es": {
            "title": "üîç C√≥digo Estimador - An√°lisis de Datos",
            "selector_idioma": "Seleccione el idioma",
            "cargar_datos": "Cargar Archivo CSV",
            "ayuda_carga": "Suba su archivo de datos para comenzar el an√°lisis",
            "archivo_cargado": "Archivo cargado:",
            "tamano_archivo": "Tama√±o:",
            "vista_previa": "Vista Previa R√°pida",
            "analisis_btn": "An√°lisis Completo",
            "ayuda_analisis": "Ejecuta un an√°lisis completo del dataset",
            "duplicados_btn": "An√°lisis de Duplicados",
            "outliers_btn": "Detecci√≥n de Outliers",
            "tratamiento_nulos_btn": "Tratamiento de Valores Nulos",
            "exportar_btn": "Exportar Resultados",
            "info_basica": "Informaci√≥n B√°sica",
            "filas": "N√∫mero de filas:",
            "columnas": "N√∫mero de columnas:",
            "pestana_nulos": "Valores Nulos",
            "pestana_tipos": "Tipos de Datos",
            "pestana_estadisticas": "Estad√≠sticas",
            "pestana_muestra": "Muestra de Datos",
            "titulo_nulos": "An√°lisis de Valores Nulos",
            "nombre_columna": "Columna",
            "conteo_nulos": "Valores Nulos",
            "porcentaje_nulos": "Porcentaje (%)",
            "advertencia_nulos": "‚ö†Ô∏è El dataset contiene valores nulos",
            "exito_nulos": "‚úÖ No se encontraron valores nulos",
            "titulo_tipos": "Tipos de Datos",
            "tipo_dato": "Tipo de Dato",
            "columnas_numericas": "Columnas num√©ricas:",
            "columnas_no_numericas": "Columnas no num√©ricas:",
            "titulo_estadisticas": "Estad√≠sticas Descriptivas",
            "titulo_muestra": "Muestra de Datos (10 primeras filas)",
            "titulo_duplicados": "An√°lisis de Duplicados",
            "total_duplicados": "Total filas duplicadas:",
            "filas_duplicadas": "Filas duplicadas encontradas:",
            "titulo_outliers": "Detecci√≥n de Valores At√≠picos",
            "seleccion_columna": "Seleccione columna:",
            "outliers_detectados": "Outliers encontrados:",
            "porcentaje_outliers": "Porcentaje de outliers:",
            "titulo_tratamiento": "Tratamiento de Valores Nulos",
            "opcion_tratamiento1": "Eliminar filas con nulos",
            "opcion_tratamiento2": "Rellenar con media (num√©ricas)",
            "opcion_tratamiento3": "Rellenar con moda (categ√≥ricas)",
            "opcion_tratamiento4": "Rellenar con valor espec√≠fico:",
            "aplicar_tratamiento": "Aplicar Tratamiento",
            "exito_tratamiento": "Tratamiento aplicado con √©xito",
            "sin_nulos": "No hay valores nulos para tratar",
            "guardar_dataset": "Guardar Dataset Tratado",
            "nombre_guardado": "Nombre del archivo:",
            "boton_guardar": "Descargar Dataset",
            "exito_guardado": "Dataset guardado con √©xito",
            "herramientas_analisis": "Herramientas de An√°lisis"
        },
        "en": {
            "title": "üîç Code Estimator - Data Analysis",
            # ... (resto de traducciones en ingl√©s)
            "herramientas_analisis": "Analysis Tools"
        },
        "fr": {
            "title": "üîç Code Estimator - Analyse de Donn√©es",
            # ... (resto de traducciones en franc√©s)
            "herramientas_analisis": "Outils d'Analyse"
        }
    }
    return translations.get(lang, translations["es"])

# ... (resto de las funciones se mantienen igual)

# Interfaz principal de la aplicaci√≥n
def main():
    # Configuraci√≥n de idioma
     
    st.sidebar.title("üåç Language / Idioma / Langue")
    idioma = st.sidebar.radio("", ["Espa√±ol", "English", "Fran√ßais"])
    codigo_idioma = {"Espa√±ol": "es", "English": "en", "Fran√ßais": "fr"}[idioma]
    tr = cargar_traducciones(codigo_idioma)
    
    st.title(tr["title"])
    
    # Carga de archivo
    archivo = st.file_uploader(
        tr["cargar_datos"], 
        type=['csv'],
        help=tr["ayuda_carga"]
    )
    
    if archivo is not None:
        st.success(f"{tr['archivo_cargado']} {archivo.name}")
        st.write(f"{tr['tamano_archivo']} {archivo.size / 1024:.2f} KB")
        
        df = cargar_dataset(archivo)
        
        if df is not None:
            st.write("### " + tr["vista_previa"])
            st.dataframe(df.head(3))
            
            # SECCI√ìN DE HERRAMIENTAS EN EL SIDEBAR
            st.sidebar.title("üõ†Ô∏è " + tr["herramientas_analisis"])
            
            # Botones de an√°lisis en el sidebar
            if st.sidebar.button("üîç " + tr["analisis_btn"], help=tr["ayuda_analisis"]):
                mostrar_analisis_completo(df, tr)
            
            if st.sidebar.button("üìù " + tr["duplicados_btn"]):
                analizar_duplicados(df, tr)
            
            if st.sidebar.button("üìä " + tr["outliers_btn"]):
                detectar_outliers(df, tr)
            
            # Bot√≥n de tratamiento de nulos en el sidebar
            if st.sidebar.button("üõ†Ô∏è " + tr["tratamiento_nulos_btn"]):
                df = tratar_valores_nulos(df, tr)
                st.write("### Dataset despu√©s del tratamiento")
                st.dataframe(df.head())
                
                # Opci√≥n para guardar el dataset tratado
                guardar_dataset(df, tr)
            
            # Opci√≥n para exportar resultados (se mantiene en el √°rea principal)
            if st.checkbox(tr["exportar_btn"]):
                nulos = df.isnull().sum().reset_index()
                nulos.columns = ['Columna', 'Valores_Nulos']
                st.download_button(
                    label="üì• Descargar An√°lisis de Nulos",
                    data=nulos.to_csv(index=False).encode('utf-8'),
                    file_name='analisis_nulos.csv',
                    mime='text/csv'
                )

if __name__ == "__main__":
    main()
